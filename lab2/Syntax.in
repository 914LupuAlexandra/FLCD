program ::= {function_declaration} statement 
function_declaration ::= "definition" "(" [declaration_list] ")" ":" ENTER compound_statement ["return" expression | "return" condition]
declaration_list ::= declaration [";"]| declaration "," declaration_list [";"]
declaration ::= type IDENTIFIER 
type ::= "bool" | "char" | "int" | "string"

compound_statement ::= TAB statement_list
statement_list ::= statement | statement ";" statement_list
statement ::= assignment_statement | io_statement | if_statement | while_statement 
assignment_statement ::= IDENTIFIER "=" expression
io_statement ::= "input" | "print" "(" IDENTIFIER ")"
if_statement ::= "if" condition ":" [ENTER & TAB]statement ["else" ":" ENTER & TAB statement] {"elif" condition ":" ENTER & TAB statement}
while_statement ::= "while" condition ":" ENTER & TAB statement

expression ::= [IDENTIFIER | CONSTANT] | expression ["+" | "-" | "/" | "*" ] [IDENTIFIER | CONSTANT]

condition ::= expression RELATION expression
RELATION ::= "==" | "!=" | "greater [=] than" | "less [=] than"